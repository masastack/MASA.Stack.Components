@namespace Masa.Stack.Components

<MTextField Value="Value"
            ValueChanged="ValueChanged"
            BackgroundColor="@BackgroundColor"
            Class="@Class"
            Dense="@Dense"
            Flat
            Clearable
            Placeholder="Search"
            HideDetails="true"
            OnKeyDown="HandleOnKeyDown"
            Solo
            DebounceInterval=500
            ClearIcon="mdi-close-circle"
            MinHeight="MinHeight"
            OnFocus="FocusHandler"
            OnBlur="BlurHandler"
            Style="@($"border-radius:10px; mix-blend-mode: normal;{Style}")"
            @attributes="@Attributes">
    <PrependInnerContent>
        @if (!isFocused)
        {
            <MIcon>mdi-magnify</MIcon>
        }
    </PrependInnerContent>
</MTextField>

@code {

    [Parameter]
    public string? Value { get; set; }

    [Parameter]
    public EventCallback<string?> ValueChanged { get; set; }

    [Parameter]
    public string BackgroundColor { get; set; } = "#F0F3FA";

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public bool Dense { get; set; }

    [Parameter]
    public EventCallback OnEnter { get; set; }

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public StringNumber? Height { get; set; }
    
    [Parameter]
    public StringNumber? MinHeight { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> Attributes { get; set; } = new();

    bool isFocused = false;

    private async Task HandleOnKeyDown(KeyboardEventArgs args)
    {
        if (args.Key == "Enter" && OnEnter.HasDelegate)
        {
            await OnEnter.InvokeAsync();
        }
    }

    private void FocusHandler()
    {
        isFocused = true;
    }

    private void BlurHandler()
    {
        isFocused = false;
    }
}