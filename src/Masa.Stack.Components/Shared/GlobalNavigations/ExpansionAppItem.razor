@namespace Masa.Stack.Components.GlobalNavigations
@inject DynamicTranslateProvider TranslateProvider
@inherits MasaComponentBase

@if (Data is not null)
{
    <MHover Disabled="@IsDisabled">
        @if (!Data.IsAction)
        {
            <MListItem @attributes="@context.Attrs"
                       Class="@GetClass(context.Hover)"
                       Value="@Data.Code"
                       Disabled="@IsDisabled"
                       OnClick="async () => await NavigateTo(Data.Url)"
                       ActiveClass="@ActiveClass">
                <ItemContent Context="item">
                    <MListItemContent>
                        <MListItemTitle Style="@(IsChecked?"color: #323D6F;":"")">@TranslateProvider.DT(Data.Name)</MListItemTitle>
                    </MListItemContent>
                    <MListItemAction Class="ma-0" Style="@GetIsDisplayStyle(context.Hover)">
                        @if (Checkable)
                        {
                            <MCheckbox Dense Value="@IsChecked"></MCheckbox>
                        }
                        else if (Level < 3)
                        {
                            <SAutoLoadingButton Icon
                                                XSmall
                                                Color="@(Data.IsFavorite ? "#FFB547" : "")"
                                                OnClick="@ToggleFavorite"
                                                StopPropagation>
                                <MIcon Small>mdi-star</MIcon>
                            </SAutoLoadingButton>
                        }
                    </MListItemAction>
                    @if(context.Hover is false)
                    {
                        if (Checkable && Data.HasChildren is false)
                        {
                            if(IsChecked)
                            {
                                <MIcon Small Class="mr-1" Color="primary">mdi-check</MIcon>
                            }
                            else if(Data.IsClose)
                            {
                                <MIcon Small Class="mr-1" Color="red">mdi-close</MIcon>
                            }
                        }
                        else if (Data.IsFavorite)
                        {
                            <MIcon Small Style="margin-right: 6px" Color="#FFB547">mdi-star</MIcon>
                        }
                    }
                   
                </ItemContent>
            </MListItem>
            @if (Data.Level == 1 && Data.HasChildren)
            {
                <MDivider />
            }
        }
        else
        {
            <MListItem @attributes="@context.Attrs"
                       Class="@GetClass(context.Hover)"
                       Disabled="IsDisabled"
                       OnClick="async () => await NavigateTo(Data.Url)"
                       Value="@string.Format(ExpansionApp.ActionCodeFormat, NavCode, Data.Code)"
                       ActiveClass="@ActiveClass">
                <ItemContent Context="item">
                    <MListItemContent>
                        <MListItemTitle Style="@(IsChecked?"color: #323D6F;":"")">@Data.Name</MListItemTitle>
                    </MListItemContent>

                    @if (Checkable)
                    {
                        <MListItemAction Class="ma-0" Style="@GetIsDisplayStyle(context.Hover)">
                            <MCheckbox Dense Value="@IsChecked"></MCheckbox>
                        </MListItemAction>
                        @if (context.Hover is false)
                        {
                            if (IsChecked)
                            {
                                <MIcon Small Class="mr-1" Color="primary">mdi-check</MIcon>
                            }
                            else if (Data.IsClose)
                            {
                                <MIcon Small Class="mr-1" Color="red">mdi-close</MIcon>
                            }
                        }
                    }
                </ItemContent>
            </MListItem>
        }
    </MHover>
}
