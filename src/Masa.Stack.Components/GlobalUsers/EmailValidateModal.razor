@using System.Text.RegularExpressions
<ADialog @bind-Value="_visible"
         Title="@(IsUpdate ? "更换邮箱" : "邮箱认证")"
         IconOfTitle="mdi-email"
         CancelText="取消"
         OkText="发送"
         OkDisabled="!_valid"
         OnCancel="() => _newEmail = null"
         OnOk="HandleOnOk">
    <DefaultTextField Value="_newEmail"
                      ValueChanged="NewEmailChanged"
                      TValue="string"
                      Label="邮箱地址"
                      Hint="将发送一条验证邮件至该邮箱进行验证"
                      PersistentHint>
    </DefaultTextField>
</ADialog>


@code {

    [Parameter]
    public bool IsUpdate { get; set; }

    private bool _visible;
    private string? _newEmail;
    private bool _valid;

    internal void Open()
    {
        _visible = true;
        StateHasChanged();
    }

    private void NewEmailChanged(string val)
    {
        _newEmail = val;

        var match = Regex.Match(_newEmail, @"^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$");
        _valid = match.Success;
    }

    private async Task HandleOnOk()
    {
        var email = _newEmail;
    // TODO: send email to validate
    }

}
