@page "/counter"
@inject IPopupService PopupService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<SButton Depressed Color="primary" @onclick="IncrementCount">Click me</SButton>
<SButton Depressed Color="primary" @onclick="PopupAsync">PopupService</SButton>

<MForm EnableValidation class="mt-12 mx-12 text-center">
<MTextField @bind-Value="@_password" Class="mt-3" Label="Password" OnKeyDown="KeyDownHandler"
            Type="@(_showPwd ? "text" : "password")" Placeholder="PasswordPlaceHolder"
            AppendIcon="@(_showPwd ? "mdi-eye" : "mdi-eye-off")" OnAppendClick="()=>_showPwd = !_showPwd" Outlined>
    <PrependInnerContent>
        <MIcon>mdi-lock</MIcon>
    </PrependInnerContent>
</MTextField>
</MForm>
@code {
    private int currentCount = 0;
    bool _showPwd;
    string _password;

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task PopupAsync()
    {
        await PopupService.EnqueueSnackbarAsync("Test",AlertTypes.Success);
    }

    private void KeyDownHandler(KeyboardEventArgs args)
    {
        
    }
}
