@page "/dateTimeRangePickerExample"

<MRow>
    <MCol Cols="3">
        <SDateTimeRangeToolbar OnUpdate="OnUpdate" OnAutoUpdate="OnUpdate" @bind-StartDateTime="@StartTimeOffset" @bind-EndDateTime="@EndTimeOffSet"
                               ShowTimeZoneSelector="false" Clearable></SDateTimeRangeToolbar>
    </MCol>
    <MCol Cols="3">
        <SDateTimeRangeToolbar OnUpdate="OnUpdate" OnAutoUpdate="OnUpdate" ShowQuickChange="false" Class="full-width"
                                Clearable></SDateTimeRangeToolbar>
    </MCol>
    <MCol Cols="6">
        <SDateTimeRangeToolbar  StartDateTime="@Offsets.Item1" EndDateTime="@Offsets.Item2" OnUpdate="OnUpdate" OnAutoUpdate="OnUpdate" Class="full-width" ShowTimeZoneSelector ShowInterval ShowQuickChange Clearable></SDateTimeRangeToolbar>
    </MCol>
</MRow>
<div class="pa-12 mb-6">
    <SDateTimePicker Value=StartTime Max=EndTime />
    <SDateTimePicker Value=StartTime Max="new DateTime(2023,04,13,11,00,0,DateTimeKind.Utc)" />
    <SDateTimePicker Value=StartTime Max="new DateTime(2023,04,13,23,00,0,DateTimeKind.Utc)" Min="(new DateTime(2023,04,10,13,00,0,DateTimeKind.Utc))" />
    <SDateTimePicker Value=StartTime Max="new DateTime(2023,04,13,03,00,0,DateTimeKind.Utc)" Min="(new DateTime(2023,04,10,18,00,0,DateTimeKind.Utc))" />
    <SDateTimePicker Value=StartTime Max="new DateTime(2023,04,13,11,00,0,DateTimeKind.Utc)" Min="(new DateTime(2023,04,10,23,00,0,DateTimeKind.Utc))" />
</div>

@code {
    public DateTime? StartTime { get; set; }
    public DateTime? EndTime { get; set; }

    public DateTimeOffset? StartTimeOffset { get; set; }
    public DateTimeOffset? EndTimeOffSet { get; set; }
    public (DateTimeOffset?, DateTimeOffset?) Offsets { get; set; }

    protected override Task OnInitializedAsync()
    {
        StartTimeOffset = DateTimeOffset.Now.LocalDateTime;
        EndTimeOffSet = DateTimeOffset.Now.AddHours(1).LocalDateTime;
        Offsets = (StartTimeOffset,EndTimeOffSet);
        return base.OnInitializedAsync();
    }

    private async Task OnUpdate((DateTimeOffset? start, DateTimeOffset? end) abc)
    {
        Offsets = abc;
        (StartTimeOffset,EndTimeOffSet) = Offsets;
       System.Console.WriteLine("{0}\t{1}",abc.start?.ToString(), abc.end?.ToString());
    }

}