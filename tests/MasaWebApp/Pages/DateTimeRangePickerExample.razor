@page "/dateTimeRangePickerExample"
@using Masa.Stack.Components.Rcl.Shared.IntegrationComponents.DateTime.Models

<MRow>
    <MCol Cols="12">
        <MCard>
            <MCardTitle>
                最基础的使用，默认时间间隔为 now - 12 小时
            </MCardTitle>
        </MCard>
        <SDateTimeRangeToolbar OnUpdate="OnUpdate1"
                               OnAutoUpdate="OnUpdate1"
                               @bind-StartDateTime="Offsets1.Start"
                               @bind-EndDateTime="Offsets1.End"
                               ShowQuickChange="false"
                               Clearable></SDateTimeRangeToolbar>
    </MCol>
    <MCol Cols="3">
        <MCard>
            <MCardTitle>
                设置了开始时间和结束时间
            </MCardTitle>
            <MCardText>
                开始时间： now - 2d， 结束时间： now - 1d
            </MCardText>
        </MCard>
        <SDateTimeRangeToolbar OnUpdate="OnUpdate2"
                               OnAutoUpdate="OnUpdate2"
                               @bind-StartDateTime="@Offsets2.Start"
                               @bind-EndDateTime="@Offsets2.End"
                               ShowQuickChange="false"
                               Clearable></SDateTimeRangeToolbar>
    </MCol>
    <MCol Cols="12">
        <MCard>
            <MCardTitle>
                设置了开始时间、结束时间，开启最近时间选择
            </MCardTitle>
            <MCardText>
                开始时间： now - 4d， 结束时间： now - 3d ，最近时间选择 最近1小时
            </MCardText>
        </MCard>
        <SDateTimeRangeToolbar OnUpdate="OnUpdate3"
                               OnAutoUpdate="OnUpdate3"
                               @bind-StartDateTime="@Offsets3.Start"
                               @bind-EndDateTime="@Offsets3.End"
                               @bind-DefaultQuickRange="_1hour"
                               Clearable></SDateTimeRangeToolbar>
    </MCol>
    <MCol Cols="12">
        <MCard>
            <MCardTitle>
                设置了开始时间、结束时间，开启最近时间选择，开启时区选择和自动刷新
            </MCardTitle>
            <MCardText>
                开始时间： now - 6d， 结束时间： now - 5d ，最近时间选择 最近6小时
            </MCardText>
        </MCard>
        <SDateTimeRangeToolbar OnUpdate="OnUpdate4"
                               OnAutoUpdate="OnUpdate4"
                               @bind-StartDateTime="@Offsets4.Start"
                               @bind-EndDateTime="@Offsets4.End"
                               ShowTimeZoneSelector
                               ShowInterval
                               ShowQuickChange
                               @bind-DefaultQuickRange="_6hour"
                               Clearable></SDateTimeRangeToolbar>
    </MCol>
</MRow>

@code {
    QuickRangeKey? _1hour = QuickRangeKey.Last1Hour;
    QuickRangeKey? _6hour = QuickRangeKey.Last1Hour;
    public StartAndEndTime Offsets1 { get; set; } = new();
    public StartAndEndTime Offsets2 { get; set; } = new(new DateTimeOffset(DateTime.Now.AddDays(-2)), new DateTimeOffset(DateTime.Now.AddDays(-1)));
    public StartAndEndTime Offsets3 { get; set; } = new(new DateTimeOffset(DateTime.Now.AddDays(-4)), new DateTimeOffset(DateTime.Now.AddDays(-3)));
    public StartAndEndTime Offsets4 { get; set; } = new(new DateTimeOffset(DateTime.Now.AddDays(-6)), new DateTimeOffset(DateTime.Now.AddDays(-5)));

    private void OnUpdate1((DateTimeOffset?, DateTimeOffset?) times)
    {
        Offsets1.Start = times.Item1;
        Offsets1.End = times.Item2;
    }

    private void OnUpdate2((DateTimeOffset?, DateTimeOffset?) times)
    {
        Offsets2.Start = times.Item1;
        Offsets2.End = times.Item2;
    }

    private void OnUpdate3((DateTimeOffset?, DateTimeOffset?) times)
    {
        Offsets3.Start = times.Item1;
        Offsets3.End = times.Item2;
    }

    private void OnUpdate4((DateTimeOffset?, DateTimeOffset?) times)
    {
        Offsets4.Start = times.Item1;
        Offsets4.End = times.Item2;
    }


    public class StartAndEndTime
    {
        public StartAndEndTime() { }

        public StartAndEndTime(DateTimeOffset? start, DateTimeOffset? end)
        {
            Start = start;
            End = end;
        }

        public DateTimeOffset? Start { get; set; } = default;

        public DateTimeOffset? End { get; set; } = default;
    }
}

